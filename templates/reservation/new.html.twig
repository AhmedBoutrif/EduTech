{% extends 'base.html.twig' %}

{% block title %}Nouvelle R√©servation{% endblock %}

{% block main %}
   
    <div class="container mt-5">
        <h1 class="mb-4">Cr√©er une nouvelle r√©servation</h1>
         {# Debugging: Check if the "topic" field exists #}
        
        {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate'}}) }}
        
        <div class="mb-3">
            {{ form_label(form.topic, 'Sujet ', {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.topic, {
                'attr': {
                    'class': 'form-control',
                    'id': ' reservation_topic',
                    'maxlength': '255',
                }
            }) }}   
            <p id="charCount" class="text-muted">0 / 255</p>
            {% if form.topic.vars.errors|length > 0 %}
                <p class="text-danger">{{ form_errors(form.topic) }}</p>
            {% endif %}
            {{ form_errors(form.topic) }}
        </div>

      

      {#  <div class="mb-3">
            {{ form_label(form.start_time, "Heure de d√©but", {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.start_time, {'attr': {'class': 'form-control flatpickr', 'placeholder': 'S√©lectionnez la date et l\'heure de d√©but'}}) }}
            {{ form_errors(form.start_time) }}
        </div> #}

             <div class="mb-3">
    <label for="reservation_date" class="form-label">Date</label>
    <input type="text" id="reservation_date" class="form-control" 
           value="{{ reservation.avaibility.date|date('Y-m-d') }}" disabled>
</div>


    <div class="mb-3">
        {{ form_label(form.hour) }}
        {{ form_widget(form.hour, { 'attr': {'class': 'form-control'} }) }}
        {{ form_errors(form.hour) }}
    </div>

       <div class="mb-3">
            {{ form_label(form.duration, "Dur√©e (minutes)", {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.duration, {
                'attr': {
                    'class': 'form-control',
                    'id': 'durationInput'
                }
            }) }}
            {{ form_errors(form.duration) }}
        </div>

        <button type="submit" class="btn btn-primary">Enregistrer</button>
        {{ form_end(form) }}
    </div>

    {# Include Flatpickr CSS and JS #}
   
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

    <script>
       document.addEventListener('DOMContentLoaded', function() {
    // Wait for the DOM to be fully loaded
    const inputField = document.getElementById("reservation_topic");
    const charCountElement = document.getElementById("charCount");

    if (inputField && charCountElement) {
        console.log("Input field and character count element found!");
if (charCountElement)
        function updateCharCount() {
            const charCount = inputField.value.length;
            const maxLength = inputField.getAttribute("maxlength");
            charCountElement.innerText = `${charCount} / ${maxLength}`;

        console.log(`Current char count: ${charCount}`);
            
         if (charCount < 20 || charCount === 255) {
    console.log("üî¥ Text color should be RED");
    charCountElement.style.color = "red";
    charCountElement.style.setProperty("color", "red", "important");

} else if (charCount >= 200 && charCount < 255) {
    console.log("üü† Text color should be ORANGE");
    charCountElement.style.color = "orange";
    charCountElement.style.setProperty("color", "orange", "important");

} else {
    console.log("üü¢ Text color should be GREEN");
    charCountElement.style.color = "green";
    charCountElement.style.setProperty("color", "green", "important");
}



        }

        // Update the count when the user types
        inputField.addEventListener("input", updateCharCount);

        // Initialize the count when the page loads
        updateCharCount();
    } else {
        console.error("Input field or character count element not found!");
        console.log("Input field:", inputField);
        console.log("Character count element:", charCountElement);
    }
});
    </script>
{% endblock %}