<?php

namespace ContainerPMkOmV7;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiPlatform_Doctrine_Orm_Listener_Mercure_PublishService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'api_platform.doctrine.orm.listener.mercure.publish' shared service.
     *
     * @return \ApiPlatform\Symfony\Doctrine\EventListener\PublishMercureUpdatesListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'api-platform'.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Doctrine'.\DIRECTORY_SEPARATOR.'Common'.\DIRECTORY_SEPARATOR.'Messenger'.\DIRECTORY_SEPARATOR.'DispatchTrait.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'api-platform'.\DIRECTORY_SEPARATOR.'core'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Symfony'.\DIRECTORY_SEPARATOR.'Doctrine'.\DIRECTORY_SEPARATOR.'EventListener'.\DIRECTORY_SEPARATOR.'PublishMercureUpdatesListener.php';

        $a = ($container->privates['api_platform.symfony.iri_converter'] ?? self::getApiPlatform_Symfony_IriConverterService($container));

        if (isset($container->privates['api_platform.doctrine.orm.listener.mercure.publish'])) {
            return $container->privates['api_platform.doctrine.orm.listener.mercure.publish'];
        }
        $b = ($container->privates['api_platform.metadata.resource.metadata_collection_factory.cached'] ?? self::getApiPlatform_Metadata_Resource_MetadataCollectionFactory_CachedService($container));

        if (isset($container->privates['api_platform.doctrine.orm.listener.mercure.publish'])) {
            return $container->privates['api_platform.doctrine.orm.listener.mercure.publish'];
        }
        $c = ($container->privates['debug.serializer'] ?? self::getDebug_SerializerService($container));

        if (isset($container->privates['api_platform.doctrine.orm.listener.mercure.publish'])) {
            return $container->privates['api_platform.doctrine.orm.listener.mercure.publish'];
        }

        return $container->privates['api_platform.doctrine.orm.listener.mercure.publish'] = new \ApiPlatform\Symfony\Doctrine\EventListener\PublishMercureUpdatesListener(($container->privates['api_platform.resource_class_resolver'] ?? self::getApiPlatform_ResourceClassResolverService($container)), $a, $b, $c, $container->parameters['api_platform.formats'], ($container->services['messenger.default_bus'] ?? self::getMessenger_DefaultBusService($container)), ($container->privates['Symfony\\Component\\Mercure\\HubRegistry'] ?? self::getHubRegistryService($container)), NULL, NULL, NULL, false);
    }
}
