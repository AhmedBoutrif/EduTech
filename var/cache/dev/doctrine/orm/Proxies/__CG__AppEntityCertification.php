<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Certification extends \App\Entity\Certification implements \Doctrine\ORM\Proxy\InternalProxy
{
    use \Symfony\Component\VarExporter\LazyGhostTrait {
        initializeLazyObject as private;
        setLazyObjectAsInitialized as public __setInitialized;
        isLazyObjectInitialized as private;
        createLazyGhost as private;
        resetLazyObject as private;
    }

    public function __load(): void
    {
        $this->initializeLazyObject();
    }
    

    private const LAZY_OBJECT_PROPERTY_SCOPES = [
        "\0".parent::class."\0".'description' => [parent::class, 'description', null],
        "\0".parent::class."\0".'favorites' => [parent::class, 'favorites', null],
        "\0".parent::class."\0".'id' => [parent::class, 'id', null],
        "\0".parent::class."\0".'img' => [parent::class, 'img', null],
        "\0".parent::class."\0".'nom' => [parent::class, 'nom', null],
        "\0".parent::class."\0".'note' => [parent::class, 'note', null],
        "\0".parent::class."\0".'ordres' => [parent::class, 'ordres', null],
        "\0".parent::class."\0".'prix' => [parent::class, 'prix', null],
        "\0".parent::class."\0".'prixPiece' => [parent::class, 'prixPiece', null],
        "\0".parent::class."\0".'questions' => [parent::class, 'questions', null],
        "\0".parent::class."\0".'users' => [parent::class, 'users', null],
        'description' => [parent::class, 'description', null],
        'favorites' => [parent::class, 'favorites', null],
        'id' => [parent::class, 'id', null],
        'img' => [parent::class, 'img', null],
        'nom' => [parent::class, 'nom', null],
        'note' => [parent::class, 'note', null],
        'ordres' => [parent::class, 'ordres', null],
        'prix' => [parent::class, 'prix', null],
        'prixPiece' => [parent::class, 'prixPiece', null],
        'questions' => [parent::class, 'questions', null],
        'users' => [parent::class, 'users', null],
    ];

    public function __isInitialized(): bool
    {
        return isset($this->lazyObjectState) && $this->isLazyObjectInitialized();
    }

    public function __serialize(): array
    {
        $properties = (array) $this;
        unset($properties["\0" . self::class . "\0lazyObjectState"]);

        return $properties;
    }
}
